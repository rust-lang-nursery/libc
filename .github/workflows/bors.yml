name: CI (bors)

on:
  push:
    branches:
      - auto-libc
      - try

permissions: {}
jobs:
  docker_linux_tier2:
    permissions:
      actions: write # to cancel workflows (rust-lang/simpleinfra/github-actions/cancel-outdated-builds)
      contents: read # to fetch code (actions/checkout)

    name: Docker Linux Tier2
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      max-parallel: 12
      matrix:
        target: [
          i686-linux-android,
        ]
    steps:
      - uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        run: TARGET=${{ matrix.target }} sh ./ci/install-rust.sh
      - name: Execute run-docker.sh
        run: LIBC_CI=1 sh ./ci/run-docker.sh ${{ matrix.target }}

  # These jobs doesn't actually test anything, but they're only used to tell
  # bors the build completed, as there is no practical way to detect when a
  # workflow is successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEED TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  end_success:
    name: bors build finished
    if: github.event.pusher.name == 'bors' && success()
    runs-on: ubuntu-22.04
    needs: [
      docker_linux_tier2,
    ]

    steps:
      - name: Mark the job as successful
        run: exit 0

  end_failure:
    name: bors build finished
    if: github.event.pusher.name == 'bors' && (failure() || cancelled())
    runs-on: ubuntu-22.04
    needs: [
      docker_linux_tier2,
    ]

    steps:
      - name: Mark the job as a failure
        run: exit 1
